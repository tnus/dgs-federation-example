/** Generated by the default template from graphql-java-generator */
package com.example.demo.authors.graphql.generated;

public class GraphQLTypeMapping {

	public static Class<?> getJavaClass(String typeName) {
		switch(typeName) {
			case "__Field": return com.example.demo.authors.graphql.generated.__Field.class;
			case "__TypeKind": return com.example.demo.authors.graphql.generated.__TypeKind.class;
			case "Query": return com.example.demo.authors.graphql.generated.Query.class;
			case "__Schema": return com.example.demo.authors.graphql.generated.__Schema.class;
			case "__Type": return com.example.demo.authors.graphql.generated.__Type.class;
			case "__EnumValue": return com.example.demo.authors.graphql.generated.__EnumValue.class;
			case "__DirectiveLocation": return com.example.demo.authors.graphql.generated.__DirectiveLocation.class;
			case "String": return java.lang.String.class;
			case "Int": return java.lang.Integer.class;
			case "Float": return java.lang.Double.class;
			case "Author": return com.example.demo.authors.graphql.generated.Author.class;
			case "ID": return java.lang.String.class;
			case "__InputValue": return com.example.demo.authors.graphql.generated.__InputValue.class;
			case "Boolean": return java.lang.Boolean.class;
			case "__Directive": return com.example.demo.authors.graphql.generated.__Directive.class;
			default:
				return null;
		}
	}
}